
{% comment %} Wholesale_Club_Product_Prices Start {% endcomment %}
{% assign base_product = product %}
{% assign base_variant = product.selected_or_first_available_variant %}

{% if shop.metafields.sawholesale['base_price'] == blank %}
  {% assign base_price = 'compare_at_price' %}
{% else %}
  {% assign base_price = shop.metafields.sawholesale['base_price'] %}
{% endif %}

{% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

{% if customer.tags != blank %}
  {% for mf in base_product.metafields.sawholesale %}
    {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
    {% if customer.tags contains product_customer_tag %}
      {% assign saw_has_discount = true %}
      {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
      {% assign price_key = product_customer_tag | prepend: 'price_' %}
      {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
    {% endif %}
  {% endfor %}
{% endif %}

{% assign saw_discount = 1 | minus: saw_discount %}

{% if base_price == 'price' or base_variant.compare_at_price == blank  or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
  {% assign saw_variant_compare_at_price = base_variant.price %}
{% else %}
  {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
{% endif %}

{% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
{% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
  {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
{% else %}
  {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
{% endif %}

{% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
  {% assign WCProduct_Price = base_product.price %}
  {% assign WCProduct_ComparePrice = base_product.compare_at_price %}
  {% assign WCProduct_PriceMin = base_product.price_min %}
  {% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}
  {% assign WCProduct_PriceMax = base_product.price_max %}
  {% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}
  {% assign WCProduct_VariantPrice = base_variant.price %}
  {% assign WCProduct_VariantComparePrice = base_variant.compare_at_price %}
{% else %}   
  {% assign WCProduct_Price = saw_variant_price %}
  {% assign WCProduct_PriceMin = base_product.price_min | times: saw_discount %}
  {% assign WCProduct_PriceMax = base_product.price_max | times: saw_discount %}
  {% assign WCProduct_ComparePrice = saw_variant_compare_at_price %}
  {% if base_product.compare_at_price_min != 0 %}{% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCProduct_ComparePriceMin = base_product.price_min %}{% endif %}
  {% if base_product.compare_at_price_max != 0 %}{% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCProduct_ComparePriceMax = base_product.price_max %}{% endif %}
  {% assign WCProduct_VariantPrice = saw_variant_price %}
  {% assign WCProduct_VariantComparePrice = saw_variant_compare_at_price %}
{% endif %}
{% comment %} Wholesale_Club_Product_Prices End {% endcomment %}
{% comment %}
  @param class_root {String}
    Base class root

  @param price {Number}
    WCProduct_Price

  @param price_varies {Bool}
    product.price_varies

  @param compare_at_price {Number}
    WCProduct_ComparePrice

  @param compare_at_price_varies {Bool}
    Displays a range price is a product's variants have differing prices

  @param on_sale {Bool}
    If a product, or one of it's variants is on sale

  @param emphasize_price {Bool}
    Used in product grid item to add placeholder space

  @param show_original {Bool}
    Show original price if is consistent across all variants
{% endcomment %}
<div class="{{ class_root }}--price {% if compare_at_price_varies %}price--varies{% endif %}">
  <div
    class="price--compare-at {% if emphasize_price or on_sale and show_original %}visible{% endif %}"
    data-price-compare-at
  >
    {%- capture price_html -%}
      <span class="visually-hidden">{{ 'product.item.price.original' | t }}</span>
      <span class="money">
        {{ compare_at_price | money }}
      </span>
    {%- endcapture -%}

    {% if compare_at_price_varies and on_sale and show_original %}
      {{ 'product.item.price.range_html' | t: price: price_html | strip_newlines }}
    {% elsif on_sale and show_original %}
      {{ price_html }}
    {% elsif emphasize_price %}
      <span class="price--spacer"></span>
    {% elsif show_original %}
      <span class="money"></span>
    {% endif %}
  </div>

  <div class="price--main" data-price>
    {%- capture price_html -%}
      <span class="money">
        {{ price | money }}
      </span>
    {%- endcapture -%}

    {% if price_varies %}
      {{ 'product.item.price.range_html' | t: price: price_html | strip_newlines }}
    {% else %}
      {% if on_sale and show_original %}
        <span class="visually-hidden">{{ 'product.item.price.current' | t }}</span>
      {% endif %}
      {{ price_html }}
    {% endif %}
  </div>

  {% assign variant = product.selected_or_first_available_variant %}
  {% capture total_quantity %}<span class="product--total-quantity" data-total-quantity>{{ variant.unit_price_measurement.quantity_value }}{{ variant.unit_price_measurement.quantity_unit }}</span>{% endcapture %}
  {% capture unit_price %}<span class="product--unit-price-amount money" data-unit-price-amount>{{ variant.unit_price | money }}</span>{% endcapture %}
  {% capture unit_measure %}<span class="product--unit-price-measure" data-unit-price-measure>{%- if variant.unit_price_measurement.reference_value != 1 -%}{{ variant.unit_price_measurement.reference_value }}{%- endif %}{{ variant.unit_price_measurement.reference_unit }}</span>{% endcapture %}

  <div
    class="
      product--unit-price
      {% unless variant.unit_price_measurement %}hidden{% endunless %}
    "
    data-unit-price
  >
    {{ 'product.item.price.price_per_unit_html' | t: total_quantity: total_quantity, unit_price: unit_price, unit_measure: unit_measure | strip_newlines }}
  </div>

  {%- capture tax_text -%}
    {{ 'product.item.price.tax_line_html' | t }}
  {%- endcapture -%}

  {%- if tax_text != blank and class_root != 'productitem' -%}
    <div class="
        product--tax
        {% unless variant.taxable %}hidden{% endunless %}
      "
      data-tax-line
    >
      {{ tax_text }}
    </div>
  {%- endif -%}
</div>
