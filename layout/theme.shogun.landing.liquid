{% comment %}
Auto-generated by Shogun.
This file can be re-written at any time.
{% endcomment %}

<!doctype html>
<html class="no-js no-touch" lang="{{ shop.locale }}">
  
<head>
  
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge">

    <link rel="preconnect" href="https://cdn.shopify.com">
    <link rel="preconnect" href="https://fonts.shopifycdn.com">
    <link rel="preconnect" href="https://v.shopify.com">
    <link rel="preconnect" href="https://cdn.shopifycloud.com">

    <title>
      {{- page_title -}}

      {%- if current_tags -%}
        {% capture cat_array %}{%- render 'advanced-tag-loop' -%}{% endcapture %}
        {% assign cat_array = cat_array | split: '|' %}
        {% assign title_tags = '' %}
        {% assign meta_tags = current_tags | join: ', ' %}
        {%- for tag in current_tags -%}
          {% assign is_advanced_tag = false %}
          {% assign cat = tag | split: '_' | first %}

          {%- unless cat == tag -%}
            {%- if cat_array contains cat -%}
              {% assign is_advanced_tag = true %}
              {% assign title_tags = title_tags | append: ', ' | append: tag | replace_first: '_', ': ' %}
            {%- endif -%}
          {%- endunless -%}

          {%- unless is_advanced_tag -%}
            {% assign title_tags = title_tags | append: ', ' | append: tag %}
          {%- endunless -%}
        {%- endfor -%}
        {{ 'general.title.tags' | t: tags: title_tags | remove_first: ', ' }}
      {%- endif -%}

      {%- if current_page != 1 -%}
        {{- 'general.title.page' | t: page: current_page -}}
      {%- endif -%}

      {%- unless page_title contains shop.name -%}
        {{- 'general.title.shop' | t: shop: shop.name -}}
      {%- endunless -%}
    </title>

    {% if page_description != blank %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'favicon' %}
    <!-- PLANBEE CUSTOM CODE -->
    <!-- Sets the canonical URL of products and collections with the metafield 'pb_canonical' to a newer version. -->
    {%- render 'pb-theme-old-product-category-canonical' -%}
    <!-- END PLANBEE CUSTOM CODE -->

    {% if template contains 'collection' and current_tags %}
      <meta name="robots" content="noindex" />
      <link rel="canonical" href="{{ shop.url }}{{ collection.url }}" />
    {% else %}
      <link rel="canonical" href="{{ canonical_url }}" />
    {% endif %}

    <meta name="viewport" content="width=device-width">

    {% assign twitter_handle = settings.social_twitter | split: 'twitter.com/' | last %}
    {%
      render 'social-meta-tags',
      twitter_handle: twitter_handle
    %}

    <link rel="preload" href="{{ settings.type_menu | font_url }}" as="font" crossorigin="anonymous">
    <link rel="preload" as="style" href="{{ 'theme.css' | asset_url }}">

    <!-- starapps_scripts_start -->
<!-- This code is automatically managed by StarApps Studio -->
<!-- Please contact support@starapps.studio for any help -->

<script type="text/javascript" src="https://bcdn.starapps.studio/apps/vtk/planbee-primary-resources/script-1610705879.js?shop={{shop.permanent_domain}}" async></script>
<!-- starapps_scripts_end -->
{{ content_for_header }}

    {{ 'theme.css' | asset_url | stylesheet_tag }}

    <!-- PLANBEE CUSTOM CODE -->
    <!-- Custom styles and overrides -->
    {{ 'pb-theme.css' | asset_url | stylesheet_tag }}
    <!-- Product image slider -->
    {% if product.id > 1 %}
    {% render 'pb-product-image-slider' %}
    {% endif %}
    <!-- Pinterest tracking -->
    {% render 'pb-pinterest-tracking' %}
    <!-- PayPal/CloudIQ -->
    {% render 'pb-paypal-cloudiq' %}
    <!-- END PLANBEE CUSTOM CODE  -->

    {% comment %}Inject theme-object begin{% endcomment %}
    <script>
      window.Theme = window.Theme || {};
      window.Theme.routes = {
        "root_url": "{{ routes.root_url }}",
        "account_url": "{{ routes.account_url }}",
        "account_login_url": "{{ routes.account_login_url }}",
        "account_logout_url": "{{ routes.account_logout_url }}",
        "account_register_url": "{{ routes.account_register_url }}",
        "account_addresses_url": "{{ routes.account_addresses_url }}",
        "collections_url": "{{ routes.collections_url }}",
        "all_products_collection_url": "{{ routes.all_products_collection_url }}",
        "search_url": "{{ routes.search_url }}",
        "cart_url": "{{ routes.cart_url }}",
        "cart_add_url": "{{ routes.cart_add_url }}",
        "cart_change_url": "{{ routes.cart_change_url }}",
        "cart_clear_url": "{{ routes.cart_clear_url }}",
        "product_recommendations_url": "{{ routes.product_recommendations_url }}",
      };
    </script>
    {% comment %}Inject theme-object end{% endcomment %}

  {% render 'minmaxify-head' %}

  {% render 'shogun-head' %}

</head>


  
<body class="template-{{ template.name }}" data-instant-allow-query-string {% if settings.reduce_animations %}data-reduce-animations{% endif %}>
  {{ 'ripple.css' | asset_url | stylesheet_tag }}
  
  {{ content_for_layout }}
  {{ 'shopify_common.js' | shopify_asset_url | script_tag }}
{{ 'customer_area.js' | shopify_asset_url | script_tag }}
  <script>
      document.documentElement.className=document.documentElement.className.replace(/\bno-js\b/,'js');
      if(window.Shopify&&window.Shopify.designMode)document.documentElement.className+=' in-theme-editor';
      if(('ontouchstart' in window)||window.DocumentTouch&&document instanceof DocumentTouch)document.documentElement.className=document.documentElement.className.replace(/\bno-touch\b/,'has-touch');
    </script>
<script>
        (
          function () {
            var classes = {
              block: 'pxu-lia-block',
              element: 'pxu-lia-element',
            };

            document
              .querySelectorAll('[type="application/pxs-animation-mapping+json"]')
              .forEach(function (mappingEl) {
                const section = mappingEl.parentNode;
                try {
                  const mapping = JSON.parse(mappingEl.innerHTML);
                  mapping.elements.forEach(function (elementSelector) {
                    section
                      .querySelectorAll(elementSelector)
                      .forEach(function (element) { element.classList.add(classes.element); });
                  });

                  mapping.blocks.forEach(function (blockSelector) {
                    section
                      .querySelectorAll(blockSelector)
                      .forEach(function (block) { block.classList.add(classes.block); });
                  });
                } catch (error) {
                  console.warn('Unable to parse animation mapping', mappingEl, error);
                }
            });
          }
        )()
      </script>
<script
      src="{{ 'empire.js' | asset_url }}"
      data-scripts
      data-shopify-api-url="{{ 'api.jquery.js' | shopify_asset_url }}"
      data-shopify-countries="/services/javascripts/countries.js"
      data-shopify-common="{{ 'shopify_common.js' | shopify_asset_url }}"
      data-shopify-cart="{{ 'jquery.cart.js' | asset_url }}"
      data-pxu-polyfills="{{ 'polyfills.js' | asset_url }}"
    >
    </script>
<script>
    (function () {
      function handleFirstTab(e) {
        if (e.keyCode === 9) { // the "I am a keyboard user" key
          document.body.classList.add('user-is-tabbing');
          window.removeEventListener('keydown', handleFirstTab);
        }
      }
      window.addEventListener('keydown', handleFirstTab);
    })();
    </script>
<script
      src="{{ 'instantPage.min.js' | asset_url }}"
      type="module"
      defer
    >
    </script>
<script src="//widget.trustpilot.com/bootstrap/v5/tp.widget.bootstrap.min.js"></script>
<script>
      window.$zopim||(function(d,s){var z=$zopim=function(c){z._.push(c)},$=z.s=
      d.createElement(s),e=d.getElementsByTagName(s)[0];z.set=function(o){z.set.
      _.push(o)};z._=[];z.set._=[];$.async=!0;$.setAttribute("charset","utf-8");
      $.src="https://v2.zopim.com/?52gEUMc1eR1sxksJFC5NkktLLL5R8kmG";z.t=+new Date;$.
      type="text/javascript";e.parentNode.insertBefore($,e)})(document,"script");
    </script>
  <style type="text/css">
    body, html {
      width: 100% !important;
      background: white !important;
    }
  </style>
  
</body>

</html>

