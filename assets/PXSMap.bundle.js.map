{"version":3,"sources":["webpack:///./node_modules/@pixelunion/pxs-map/dist/index.es.js"],"names":[],"mappings":";;;;;;;;;;AACA;AACA;AACA;AACA;;AAE+B;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,8CAA8C,IAAI,mBAAmB,IAAI,mBAAmB,IAAI,4CAA4C,IAAI,mBAAmB,IAAI,mBAAmB,IAAI,uCAAuC;;AAErO,uCAAuC,IAAI,mBAAmB,IAAI,4CAA4C,IAAI,mBAAmB,IAAI,uCAAuC;;AAEhL,sCAAsC,IAAI,qDAAqD,IAAI;AACnG;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;;AAEA;AACA;AACA,MAAM,+CAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEe,qEAAM,EAAC","file":"PXSMap.bundle.js","sourcesContent":["\n/*!\n * @pixelunion/pxs-map v2.0.7\n * (c) 2020 Pixel Union\n */\n\nimport $script from 'scriptjs';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/*\n * Function to convert any given latitude and longitude format to decimal degrees\n */\nfunction getDecimalDegrees() {\n  var firstComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var secondComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var thirdComponent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var fourthComponent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var directions = {\n    N: 1,\n    E: 1,\n    S: -1,\n    W: -1\n  };\n  var decimalDegrees = 0.0;\n  var components = [firstComponent, secondComponent, thirdComponent, fourthComponent];\n\n  for (var i = 0; i < components.length; i++) {\n    var component = components[i];\n\n    if (component) {\n      if (Number.isNaN(parseFloat(component))) {\n        decimalDegrees *= directions[component];\n      } else {\n        decimalDegrees += parseFloat(component) / Math.pow(60, i);\n      }\n    }\n  }\n\n  return decimalDegrees;\n}\n/*\n * By providing the ability to use a place name, or latitude and longitude coordinates\n * we give merchants, and our demo stores the option to bypass the Geocoding API.\n * The Geocoding API (https://developers.google.com/maps/documentation/geocoding/usage-and-billing) allows us\n * to take a place name and convert it to latitude and longitude expressed in decimal degrees.\n */\n\n\nfunction getLatitudeLongitude(address) {\n  // Degrees, Minutes and Seconds: DDD° MM' SS.S\"\n  var latLongDegreesMinutesSeconds = /^([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2})(?:'[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:\"[ ]?| )?(N|E|S|W) ?([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2})(?:'[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:\"[ ]?| )?(N|E|S|W)$/g; // Degrees and Decimal Minutes: DDD° MM.MMM'\n\n  var latLongDegreesMinutes = /^([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:'[ ]?| )?(N|E|S|W) ?([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:'[ ]?| )?(N|E|S|W)$/g; // Decimal Degrees: DDD.DDDDD°\n\n  var latLongDegrees = /^([-|+]?[0-9]{1,3}(?:\\.[0-9]+)?)(?:°[ ]?| )?(N|E|S|W)?,? ?([-|+]?[0-9]{1,3}(?:\\.[0-9]+)?)(?:°[ ]?| )?(N|E|S|W)?$/g;\n  var latLongFormats = [latLongDegreesMinutesSeconds, latLongDegreesMinutes, latLongDegrees];\n  var latLongMatches = latLongFormats.map(function (latLongFormat) {\n    return address.match(latLongFormat);\n  });\n  /*\n   * Select the first latitude and longitude format that is matched.\n   * Ordering:\n   *   1. Degrees, minutes, and seconds,\n   *   2. Degrees, and decimal minutes,\n   *   3. Decimal degrees.\n   */\n\n  var latLongMatch = latLongMatches.reduce(function (accumulator, value, index) {\n    if (!accumulator && value) {\n      var latLongResult = latLongFormats[index].exec(address);\n      var lat = latLongResult.slice(1, latLongResult.length / 2 + 1);\n      var lng = latLongResult.slice(latLongResult.length / 2 + 1, latLongResult.length);\n      return {\n        lat: lat,\n        lng: lng\n      };\n    }\n\n    return accumulator;\n  }, null);\n  return new Promise(function (resolve, reject) {\n    // If we've got a match on latitude and longitude, use that and avoid geocoding\n    if (latLongMatch) {\n      var latDecimalDegrees = getDecimalDegrees.apply(void 0, _toConsumableArray(latLongMatch.lat));\n      var longDecimalDegrees = getDecimalDegrees.apply(void 0, _toConsumableArray(latLongMatch.lng));\n      resolve({\n        lat: latDecimalDegrees,\n        lng: longDecimalDegrees\n      });\n    } else {\n      // Otherwise, geocode the assumed address\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        address: address\n      }, function (results, status) {\n        if (status !== google.maps.GeocoderStatus.OK || !results[0]) {\n          reject(status);\n        } else {\n          resolve(results[0].geometry.location);\n        }\n      });\n    }\n  });\n}\n\nfunction getMapStyles(colors) {\n  if (!colors) {\n    return [];\n  }\n\n  return [{\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.e\n    }]\n  }, {\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: colors.a\n    }]\n  }, {\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: colors.e\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.country',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.land_parcel',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.neighborhood',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.locality',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'poi',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: colors.d\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.c\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.b\n    }]\n  }, {\n    featureType: 'road.highway.controlled_access',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: colors.b\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: colors.e\n    }]\n  }, {\n    featureType: 'transit',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.f\n    }]\n  }];\n}\n\nfunction createMap(options) {\n  var container = options.container,\n      address = options.address,\n      zoom = options.zoom,\n      colors = options.colors;\n  return getLatitudeLongitude(address).then(function (latLong) {\n    var map = new google.maps.Map(container, {\n      center: latLong,\n      clickableIcons: false,\n      disableDefaultUI: true,\n      disableDoubleClickZoom: true,\n      gestureHandling: 'none',\n      keyboardShortcuts: false,\n      maxZoom: zoom,\n      minZoom: zoom,\n      scrollWheel: false,\n      styles: getMapStyles(colors),\n      zoom: zoom,\n      zoomControl: false\n    });\n    new google.maps.Marker({\n      clickable: false,\n      map: map,\n      position: map.getCenter()\n    });\n    map.panBy(0, 0);\n  })[\"catch\"](function (status) {\n    var usageLimits = 'https://developers.google.com/maps/faq#usagelimits';\n    var errorMessage;\n\n    switch (status) {\n      case 'ZERO_RESULTS':\n        errorMessage = \"<p>Unable to find the address:</p> \".concat(address);\n        break;\n\n      case 'OVER_QUERY_LIMIT':\n        errorMessage = \"\\n            <p>Unable to load Google Maps, you have reached your usage limit.</p>\\n            <p>\\n              Please visit\\n              <a href=\\\"\".concat(usageLimits, \"\\\" target=\\\"_blank\\\">\").concat(usageLimits, \"</a>\\n              for more details.\\n            </p>\\n          \");\n        break;\n\n      default:\n        errorMessage = 'Unable to load Google Maps.';\n        break;\n    }\n\n    throw errorMessage;\n  });\n}\n\nfunction displayErrorInThemeEditor(container, errorMessage) {\n  var isThemeEditor = window.Shopify && window.Shopify.designMode;\n\n  if (!isThemeEditor) {\n    return;\n  }\n\n  container.innerHTML = \"<div class=\\\"map-error-message\\\">\".concat(errorMessage, \"</div>\");\n}\n\nvar PxsMap = function PxsMap(section) {\n  var _this = this;\n\n  _classCallCheck(this, PxsMap);\n\n  this.map = null;\n  var el = section.el.querySelector('[data-map]');\n  var container = el.querySelector('[data-map-container]');\n  var settings = section.data;\n  var address = settings.address,\n      colors = settings.colors;\n  var apiKey = settings.api_key; // Scale so range is 12 ~ 17, rather than 1 to 6\n\n  var zoom = Number.isNaN(settings.zoom) ? 13 : 11 + parseInt(settings.zoom, 10);\n\n  if (apiKey) {\n    if (window.googleMaps === undefined) {\n      $script(\"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey), function () {\n        window.googleMaps = true;\n        createMap({\n          container: container,\n          address: address,\n          zoom: zoom,\n          colors: colors\n        }).then(function (map) {\n          _this.map = map;\n        })[\"catch\"](function (error) {\n          return displayErrorInThemeEditor(container, error);\n        });\n      });\n    } else {\n      createMap({\n        container: container,\n        address: address,\n        zoom: zoom,\n        colors: colors\n      }).then(function (map) {\n        _this.map = map;\n      })[\"catch\"](function (error) {\n        return displayErrorInThemeEditor(container, error);\n      });\n    }\n  }\n};\n\nexport default PxsMap;\n"],"sourceRoot":""}