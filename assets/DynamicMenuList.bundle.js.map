{"version":3,"sources":["webpack:///./node_modules/@pixelunion/animations/dist/animations.es.js","webpack:///./node_modules/@pixelunion/breakpoint/dist/cjs/index.js","webpack:///./source/scripts/Accordion.js","webpack:///./source/scripts/sections/DynamicMenuList.js"],"names":["makeBlock","el","animation","transition","state","stateAttribute","stateChangeAttribute","isOpen","setOpenHeight","style","setProperty","scrollHeight","Accordion","options","content","animate","onStart","blocks","Map","querySelectorAll","forEach","block","close","open","_open","_close","_getBlock","unload","matches","querySelector","has","set","get","onComplete","force","animateTo","then","DynamicMenuList","section","$el","$","context","data","accordionTrigger","seeMoreTrigger","parentNode","dataset","seeMore","innerHTML","see_less","see_more","breakpoint","closeAll","breakpoints","onBreakpointChange","_bindEvents","on","event","preventDefault","_toggleAccordion","currentTarget","toggle","off","current","min","openAll","previous","max"],"mappings":";;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;;;AAGA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,SAAS;AACxB;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,gBAAgB,QAAQ;AACxB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAE+D;;;;;;;;;AC5XlD;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,2DAA2D,mCAAmC,EAAE;AAChG;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gDAAgD;AAC5F;AACA,4CAA4C,gDAAgD;AAC5F;AACA,sEAAsE,0EAA0E;AAChJ;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B,EAAE;AACvF;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,8BAA8B,EAAE;AACnF;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;AC3NA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE;AAAA,SAAK;AACvBC,aAAS,EAAEC,iFAAU,CAAC;AACpBF,QAAE,EAAFA,EADoB;A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","file":"DynamicMenuList.bundle.js","sourcesContent":["\n  /*!\n   * @pixelunion/animations v0.1.0\n   * (c) 2019 Pixel Union\n   * Released under the UNLICENSED license.\n  */\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Promisified version of window.requestAnimationFrame.\n * @returns {Promise} Promise will resolve when requestAnimationFrame callback is run.\n */\nfunction raf() {\n  return new Promise(function (resolve) {\n    window.requestAnimationFrame(resolve);\n  });\n}\n/**\n * Represents an HTML element with associate states\n */\n\n\nvar Animation =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Object} options\n   * @param {HTMLElement}  options.el Target element\n   * @param {String} [options.state=initial] Initial state. This is also the default state.\n   * @param {String} [options.stateAttribute=data-revealer] Attribute name to update with state.\n   * @param {String} [options.stateChangeAttribute=data-revealer-transition] Attribute name to\n   * update with change of state.\n   * @param {String} [options.endEvent=transitionend] Event to listen for at end of state change.\n   * @param {Boolean} [options.hold=false] If true, changeAttribute will not be removed until the\n   * next state change.\n   * @param {Function} [options.onStart] Callback to execute immediate after\n   * applying stateChangeAttribute.\n   */\n  function Animation(options) {\n    _classCallCheck(this, Animation);\n\n    this._el = options.el;\n    this.cancelRunning = null;\n    this._state = options.state || 'initial';\n    this.initialState = this._state;\n    this.stateAttribute = options.stateAttribute || 'data-animation-state';\n    this.stateChangeAttribute = options.stateChangeAttribute || 'data-animation';\n    this.endEvent = options.endEvent || 'transitionend';\n    this.hold = !!options.hold;\n\n    this.onStart = options.onStart || function () {\n      /* do nothing */\n    };\n\n    this.activeEventHandler = null;\n  }\n  /**\n   * Returns target element\n   *\n   * @return {HTMLElement} Target element\n   */\n\n\n  _createClass(Animation, [{\n    key: \"isState\",\n\n    /**\n     * Check if a state is active\n     * @param {String} state State to compare\n     *\n     * @return {Boolean}\n     */\n    value: function isState(state) {\n      return state === this._state;\n    }\n    /**\n     * Sequences a change to a new state.\n     * @param {String} state Target state\n     *\n     * @param {Boolean} options.force Switch to final state immediately\n     *\n     * @param {Function} options.onStart Callback to execute immediately after\n     * applying stateChangeAttribute for this state change only.\n     *\n     * @param {Boolean} [options.hold=false] If true, changeAttribute will not be removed until the\n     * next state change.\n     *\n     * @return {Promise} Resolves when endEvent triggered\n     */\n\n  }, {\n    key: \"animateTo\",\n    value: function animateTo(state) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var from = this._el.dataset[this.stateAttribute] || this._state;\n      var to = state || this.initialState;\n      var force = options.force;\n      var hold = 'hold' in options ? options.hold : this.hold;\n      return new Promise(function (resolve) {\n        if (_this.cancelRunning) {\n          _this.cancelRunning();\n        }\n\n        if (from === to) {\n          // Removing this here fixes some lingering attributes. But why?\n          _this._el.removeAttribute(_this.stateChangeAttribute);\n\n          resolve(from, null);\n          return;\n        }\n\n        var running = true;\n\n        _this.cancelRunning = function () {\n          running = false;\n          resolve(null, null);\n        };\n\n        _this._el.removeEventListener(_this.endEvent, _this.activeEventHandler);\n\n        _this.activeEventHandler = null;\n\n        if (force) {\n          _this._el.setAttribute(_this.stateChangeAttribute, \"\".concat(from, \"=>\").concat(to));\n\n          _this.onStart({\n            el: _this._el,\n            from: from,\n            to: to\n          });\n\n          if (typeof options.onStart === 'function') {\n            options.onStart({\n              el: _this._el,\n              from: from,\n              to: to\n            });\n          }\n\n          _this._el.setAttribute(_this.stateAttribute, to);\n\n          _this._state = to;\n\n          if (!hold) {\n            _this._el.removeAttribute(_this.stateChangeAttribute);\n          }\n\n          resolve(to, null);\n          return;\n        }\n\n        raf().then(function () {\n          if (!running) throw new Error('cancelled');\n\n          _this._el.setAttribute(_this.stateChangeAttribute, \"\".concat(from, \"=>\").concat(to));\n\n          _this.onStart({\n            el: _this._el,\n            from: from,\n            to: to\n          });\n\n          if (typeof options.onStart === 'function') {\n            options.onStart({\n              el: _this._el,\n              from: from,\n              to: to\n            });\n          }\n\n          return raf();\n        }).then(function () {\n          if (!running) throw new Error('cancelled');\n\n          _this._el.removeEventListener(_this.endEvent, _this.activeEventHandler);\n\n          _this.activeEventHandler = function (e) {\n            // Ignore any events bubbling up\n            if (e.target !== _this._el || !running) return;\n\n            _this._el.removeEventListener(_this.endEvent, _this.activeEventHandler);\n\n            if (!hold) {\n              _this._el.removeAttribute(_this.stateChangeAttribute);\n            }\n\n            resolve(to, e);\n          };\n\n          _this._el.addEventListener(_this.endEvent, _this.activeEventHandler);\n\n          _this._el.setAttribute(_this.stateAttribute, to);\n\n          _this._state = to;\n        })[\"catch\"](function (error) {\n          // Only catch 'cancelled' errors.\n          if (error.message !== 'cancelled') throw error;\n        });\n      });\n    }\n    /**\n     * Remove any event listeners\n     */\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this._el.removeEventListener(this.endEvent, this.activeEventHandler);\n\n      this.activeEventHandler = null;\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this._el;\n    }\n    /**\n     * Returns current state\n     *\n     * @return {String} Current state\n     */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this._state;\n    }\n  }]);\n\n  return Animation;\n}();\n\n/**\n * Manage state changes for a set of elements\n */\n\nvar AnimationsManager =\n/*#__PURE__*/\nfunction () {\n  function AnimationsManager() {\n    _classCallCheck(this, AnimationsManager);\n\n    this.animations = new Map();\n  }\n  /**\n   * Add a new element and return an animation for that element. If element already has an associated animation, return that animation.\n   * @param {Object} options\n   * @param {HTMLElement}  options.el Target element\n   * @param {String} [options.state=initial] Initial state. This is also the default state.\n   * @param {String} [options.stateAttribute=data-revealer] Attribute name to update with state.\n   * @param {String} [options.stateChangeAttribute=data-revealer-transition] Attribute name to update with change of state.\n   * @param {String} [options.endEvent=transitionend] Event name to listen for at end of state change.\n   * @param {Boolean} [options.hold=false] If true, changeAttribute will not be removed until the next state change.\n   * @param {Function} [options.onStart] Callback to execute immediate after applying stateChangeAttribute.\n   *\n   * @return {Animation}\n   */\n\n\n  _createClass(AnimationsManager, [{\n    key: \"add\",\n    value: function add(options) {\n      if (this.animations.has(options.el)) return this.animations.get(options.el);\n      var animation = new Animation(options);\n      this.animations.set(options.el, animation);\n      return animation;\n    }\n    /**\n     * Remove a single animation\n     * @param {Animation} animation Animation to remove. Any event listeners will also be removed.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(animation) {\n      this.animations[\"delete\"](animation.el);\n      animation.unload();\n    }\n    /**\n     * Remove all animations, including all event listeners.\n     */\n\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      this.animations.forEach(function (animation) {\n        return animation.unload();\n      });\n    }\n  }]);\n\n  return AnimationsManager;\n}();\n\nfunction animation(options) {\n  var setOptions = {\n    endEvent: 'animationend',\n    hold: true\n  };\n  return new Animation(_objectSpread2({\n    options: options\n  }, setOptions));\n}\n\nfunction transition(options) {\n  return new Animation(options);\n}\n\nexport { Animation, AnimationsManager, animation, transition };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads the content property on the documentElement ::before pseudo element\n * for a string of ordered, comma-separated, breakpoint names.\n *\n * @returns An ordered array of strings representing the breakpoint names\n *\n */\nfunction readCSSBreakpoints() {\n    return window\n        .getComputedStyle(document.documentElement, ':before')\n        .getPropertyValue('content')\n        .replace(/\"/g, '')\n        .split(',');\n}\n/**\n * Reads the content property on the documentElement ::after pseudo element\n * for a string of the current breakpoint name. This value is updated using\n * dynamically using media queries and should match a value found in\n * the ::before pseudo element.\n *\n * @returns A string representing the current breakpoint name\n *\n */\nfunction readCSSCurrentBreakpoint() {\n    return window\n        .getComputedStyle(document.documentElement, ':after')\n        .getPropertyValue('content')\n        .replace(/\"/g, '');\n}\nvar callbacks = [];\nvar cssBreakpoints = readCSSBreakpoints();\nvar CSSBreakpoint = /** @class */ (function () {\n    function CSSBreakpoint(cssBreakpoint) {\n        this.cssBreakpoint = cssBreakpoint;\n    }\n    Object.defineProperty(CSSBreakpoint.prototype, \"value\", {\n        get: function () {\n            return this.cssBreakpoint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Checks whether this breakpoint is at least the input breakpoint\n     *\n     * @param breakpointName - The input breakpoint name\n     * @returns Whether this breakpoint is the same or greater than the input breakpoint\n     *\n     */\n    CSSBreakpoint.prototype.min = function (breakpointName) {\n        var comparison = cssBreakpoints.indexOf(this.value) - cssBreakpoints.indexOf(breakpointName);\n        return comparison >= 0;\n    };\n    /**\n     * Checks whether this breakpoint is at most the input breakpoint\n     *\n     * @param breakpointName - The input breakpoint name\n     * @returns Whether this breakpoint is the same or less than the input breakpoint\n     *\n     */\n    CSSBreakpoint.prototype.max = function (breakpointName) {\n        var comparison = cssBreakpoints.indexOf(this.value) - cssBreakpoints.indexOf(breakpointName);\n        return comparison <= 0;\n    };\n    /**\n     * Checks whether this breakpoint is at within the input breakpoint start\n     * and input breakpoint end, inclusive\n     *\n     * @param breakpointNameStart - The starting input breakpoint name\n     * @param breakpointNameEnd - The ending input breakpoint name\n     * @returns Whether this breakpoint is the same or greater than the starting input\n     *          breakpoint and the same or less than the ending input breakpoint\n     *\n     */\n    CSSBreakpoint.prototype.range = function (breakpointNameStart, breakpointNameEnd) {\n        var indexCurrent = cssBreakpoints.indexOf(this.value);\n        var indexStart = cssBreakpoints.indexOf(breakpointNameStart);\n        var indexEnd = cssBreakpoints.indexOf(breakpointNameEnd);\n        return indexStart <= indexCurrent && indexCurrent <= indexEnd;\n    };\n    /**\n     * Checks whether this breakpoint is one of the input breakpoints\n     *\n     * @param breakpointNames - One or more input breakpoint names\n     * @returns Whether this breakpoint is one of the input breakpoints\n     *\n     */\n    CSSBreakpoint.prototype.is = function () {\n        var _this = this;\n        var breakpointNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            breakpointNames[_i] = arguments[_i];\n        }\n        return breakpointNames.some(function (breakpoint) { return breakpoint === _this.value; });\n    };\n    return CSSBreakpoint;\n}());\nvar breakpoints = {\n    previous: new CSSBreakpoint(readCSSCurrentBreakpoint()),\n    current: new CSSBreakpoint(readCSSCurrentBreakpoint()),\n};\n/**\n * Gets the breakpoints\n *\n * @returns The current and previous breakpoint\n *\n */\nfunction get() {\n    return breakpoints;\n}\nexports.get = get;\n/**\n * Adds an event listener to be called when a breakpoint changes\n *\n * @param callback - The function to be called when a breakpoint changes\n *\n */\nfunction onChange(callback) {\n    if (callbacks.indexOf(callback) === -1) {\n        callbacks.push(callback);\n    }\n}\nexports.onChange = onChange;\n/**\n * Removes an event listener to be called when a breakpoint changes\n *\n * @param callback - The function to be removed from the set of event listeners\n *\n */\nfunction offChange(callback) {\n    var index = callbacks.indexOf(callback);\n    if (index !== -1) {\n        callbacks.splice(index, 1);\n    }\n}\nexports.offChange = offChange;\nvar currentMin = function (breakpointName) { return breakpoints.current.min(breakpointName); };\nexports.min = currentMin;\nvar currentMax = function (breakpointName) { return breakpoints.current.max(breakpointName); };\nexports.max = currentMax;\nvar currentRange = function (breakpointNameStart, breakpointNameEnd) { return breakpoints.current.range(breakpointNameStart, breakpointNameEnd); };\nexports.range = currentRange;\nvar currentIs = function () {\n    var _a;\n    var breakpointNames = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        breakpointNames[_i] = arguments[_i];\n    }\n    return (_a = breakpoints.current).is.apply(_a, breakpointNames);\n};\nexports.is = currentIs;\n/*\n * document.styleSheets is considered experimental technology; however,\n * the majority of current browsers implement this functionality.\n *\n * One drawback is under certain conditions, stylesheets may become\n * available due to security rules in the browser and we must be able to\n * fallback gracefully.\n */\nvar styleSheetList = document.styleSheets;\nvar mediaLists = Object.keys(styleSheetList).reduce(function (accumulator, key) {\n    var stylesheet = styleSheetList[key];\n    if (!stylesheet.href || stylesheet.href.indexOf('theme') === -1) {\n        return accumulator;\n    }\n    try {\n        var cssRules = stylesheet.cssRules;\n        for (var i = 0; i < cssRules.length; i++) {\n            var cssRule = stylesheet.cssRules[i];\n            if (!(cssRule instanceof CSSMediaRule)) {\n                continue;\n            }\n            for (var j = 0; j < cssRules.length; j++) {\n                var cssMediaCssRule = cssRule.cssRules[j];\n                if (!(cssMediaCssRule instanceof CSSStyleRule)) {\n                    continue;\n                }\n                if (cssMediaCssRule.selectorText && cssMediaCssRule.selectorText.indexOf('html::after') !== -1) {\n                    accumulator.push(cssRule.media);\n                }\n            }\n        }\n    }\n    catch (_a) {\n        return accumulator;\n    }\n    return accumulator;\n}, []);\n/*\n * Use window.matchMedia when stylesheets are accessible in the browser.\n * matchMedia is theoretically more performant than listening to every resize\n * event because it only fires when a media query boundary is crossed.\n *\n * If stylesheets aren't available, revert back to using the resize event.\n */\nif (mediaLists.length > 0) {\n    mediaLists.forEach(function (mediaList) {\n        var mql = window.matchMedia(mediaList.mediaText);\n        mql.addListener(function () {\n            var cssCurrentBreakpoint = readCSSCurrentBreakpoint();\n            if (breakpoints.current.value !== cssCurrentBreakpoint) {\n                breakpoints.previous = breakpoints.current;\n                breakpoints.current = new CSSBreakpoint(cssCurrentBreakpoint);\n                callbacks.forEach(function (callback) { return callback(breakpoints); });\n            }\n        });\n    });\n}\nelse {\n    window.addEventListener('resize', function () {\n        var cssCurrentBreakpoint = readCSSCurrentBreakpoint();\n        if (breakpoints.current.value !== cssCurrentBreakpoint) {\n            breakpoints.previous = breakpoints.current;\n            breakpoints.current = new CSSBreakpoint(cssCurrentBreakpoint);\n            callbacks.forEach(function (callback) { return callback(breakpoints); });\n        }\n    });\n}\n","import { transition } from '@pixelunion/animations';\n\nconst makeBlock = el => ({\n  animation: transition({\n    el,\n    state: 'open',\n    stateAttribute: 'data-accordion-state',\n    stateChangeAttribute: 'data-accordion-animation',\n  }),\n  isOpen: true,\n});\n\nconst setOpenHeight = el => {\n  el.style.setProperty('--menu-open-height', `${el.scrollHeight}px`);\n};\n\nexport default class Accordion {\n  constructor(el, options = {}) {\n    this.el = el;\n    this.options = {\n      content: '[data-accordion-content]',\n      animate: true,\n      onStart: () => {},\n      ...options,\n    };\n\n    this.blocks = new Map();\n  }\n\n  closeAll(options = {}) {\n    this.el.querySelectorAll(this.options.content).forEach(block => this.close(block, options));\n  }\n\n  openAll(options = {}) {\n    this.el.querySelectorAll(this.options.content).forEach(block => this.open(block, options));\n  }\n\n  open(el, options = {}) {\n    this._open(el, options);\n  }\n\n  close(el, options = {}) {\n    this._close(el, options);\n  }\n\n  toggle(el, options = {}) {\n    const { isOpen } = this._getBlock(el);\n\n    if (isOpen) {\n      this._close(el, options);\n    } else {\n      this._open(el, options);\n    }\n  }\n\n  unload() {\n    this.blocks.forEach(({ animation }) => animation.unload());\n  }\n\n  _getBlock(el) {\n    const block = el.matches(this.options.content) ? el : el.querySelector(this.options.content);\n    if (!this.blocks.has(block)) {\n      this.blocks.set(block, makeBlock(block));\n    }\n\n    return this.blocks.get(block);\n  }\n\n  _open(el, { onComplete = () => {}, force = !this.options.animate }) {\n    const block = this._getBlock(el);\n    if (block.isOpen) return;\n\n    block.isOpen = true;\n    this.options.onStart({ el: block.animation.el, state: 'open' });\n    block.animation.animateTo('open', { force, onStart: ({ el }) => setOpenHeight(el) })\n      .then(state => {\n        if (state === 'open') {\n          onComplete();\n        }\n      });\n  }\n\n  _close(el, { onComplete = () => {}, force = !this.options.animate }) {\n    const block = this._getBlock(el);\n    if (!block.isOpen) return;\n\n    block.isOpen = false;\n    this.options.onStart({ el: block.animation.el, state: 'closed' });\n    setOpenHeight(block.animation.el);\n    block.animation.animateTo('closed', { force })\n      .then(state => {\n        if (state === 'closed') {\n          onComplete();\n        }\n      });\n  }\n}\n","import $ from 'jquery';\nimport * as breakpoint from '@pixelunion/breakpoint';\n\nimport Accordion from '../Accordion';\n\nexport default class DynamicMenuList {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.context = section.data.context;\n    this.accordionTrigger = '[data-accordion-trigger]';\n    this.seeMoreTrigger = '[data-menulist-toggle]';\n\n    this.Accordion = new Accordion(this.$el[0], {\n      content: '.menulist-menu--initial[data-accordion-content]',\n      onStart: ({ el, state }) => {\n        el.parentNode.querySelector(this.accordionTrigger).dataset.accordionTrigger = state;\n      }\n    });\n\n    this.seeMore = new Accordion(this.$el[0], {\n      content: '.menulist-menu--show-more[data-accordion-content]',\n      onStart: ({ el, state }) => {\n        el\n          .parentNode\n          .querySelector(this.seeMoreTrigger)\n          .innerHTML = state === 'open' ? this.context.see_less : this.context.see_more;\n      }\n    });\n\n    if (breakpoint.max('XS')) {\n      this.Accordion.closeAll({ force: true });\n    }\n\n    this.seeMore.closeAll({ force: true });\n\n    // Handle Accordion interaction when window size changes\n    breakpoint.onChange(breakpoints => this.onBreakpointChange(breakpoints));\n\n    this._bindEvents();\n  }\n\n  _bindEvents() {\n    this.$el.on('click.menu-list', this.accordionTrigger, event => {\n      event.preventDefault();\n      this._toggleAccordion(event.currentTarget.parentNode);\n    });\n\n    this.$el.on('click.menu-list', this.seeMoreTrigger, event => {\n      event.preventDefault();\n      this.seeMore.toggle(event.currentTarget.parentNode);\n    });\n  }\n\n  onSectionUnload() {\n    this.$el.off('.menu-list');\n    this.Accordion.unload();\n    this.seeMore.unload();\n  }\n\n  onSectionBlockSelect(block) {\n    this._toggleAccordion(block.el);\n  }\n\n  onSectionBlockDeselect(block) {\n    this._toggleAccordion(block.el);\n  }\n\n  _toggleAccordion(block) {\n    if (breakpoint.min('S')) return;\n    this.Accordion.toggle(block);\n  }\n\n  onBreakpointChange(breakpoints) {\n    if (breakpoints.current.min('S')) {\n      this.Accordion.openAll({ force: true });\n    } else if (breakpoints.previous.min('S') && breakpoints.current.max('XS')) {\n      this.Accordion.closeAll({ force: true });\n    }\n  }\n}\n"],"sourceRoot":""}